<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ezshop/ProductAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ezshop/ProductAdapter.java" />
              <option name="originalContent" value="package com.example.ezshop;&#10;&#10;import android.content.Context;&#10;import android.database.Cursor;&#10;import android.text.TextUtils;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;import com.example.ezshop.R; // ensure resources are resolved&#10;&#10;public class ProductAdapter extends RecyclerView.Adapter&lt;ProductAdapter.VH&gt; {&#10;    private Context context;&#10;    private List&lt;Product&gt; products = new ArrayList&lt;&gt;();&#10;    private List&lt;Product&gt; filteredProducts = new ArrayList&lt;&gt;(); // สำหรับเก็บรายการที่กรองแล้ว&#10;    private DBhelper db;&#10;    private String role;&#10;    private String email; // for cart operations&#10;&#10;    public ProductAdapter(Context context, String role, String email) {&#10;        this.context = context;&#10;        this.db = new DBhelper(context);&#10;        this.role = role == null ? &quot;&quot; : role;&#10;        this.email = email;&#10;        loadProducts();&#10;    }&#10;&#10;    private void loadProducts() {&#10;        products.clear();&#10;        filteredProducts.clear();&#10;        Cursor c = db.getAllProducts();&#10;        if (c != null) {&#10;            while (c.moveToNext()) {&#10;                int id = c.getInt(0);&#10;                String name = c.getString(1);&#10;                int qty = c.getInt(2);&#10;                String desc = c.getString(3);&#10;                String image = c.getString(4);&#10;                Product product = new Product(id, name, qty, desc, image);&#10;                products.add(product);&#10;                filteredProducts.add(product);&#10;            }&#10;            c.close();&#10;        }&#10;    }&#10;&#10;    public void filter(String query) {&#10;        filteredProducts.clear();&#10;        if (query == null || query.isEmpty()) {&#10;            filteredProducts.addAll(products);&#10;        } else {&#10;            String lowerQuery = query.toLowerCase().trim();&#10;            for (Product product : products) {&#10;                // ค้นหาจากรหัส (ID) หรือชื่อสินค้า&#10;                if (String.valueOf(product.id).contains(lowerQuery) ||&#10;                    product.name.toLowerCase().contains(lowerQuery)) {&#10;                    filteredProducts.add(product);&#10;                }&#10;            }&#10;        }&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public VH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View v = LayoutInflater.from(context).inflate(R.layout.item_product, parent, false);&#10;        return new VH(v);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull VH holder, int position) {&#10;        Product p = filteredProducts.get(position);&#10;        holder.tvName.setText(p.name);&#10;        holder.tvDesc.setText(p.description == null ? &quot;&quot; : p.description);&#10;&#10;        if (p.qty &lt;= 0) {&#10;            holder.tvQty.setText(&quot;รอเติมสต็อก&quot;);&#10;            holder.tvQty.setTextColor(holder.itemView.getContext().getResources().getColor(android.R.color.holo_red_dark));&#10;            holder.btnAddCart.setEnabled(false);&#10;        } else {&#10;            holder.tvQty.setText(&quot;จำนวน: &quot; + p.qty);&#10;            holder.tvQty.setTextColor(holder.itemView.getContext().getResources().getColor(android.R.color.black));&#10;            holder.btnAddCart.setEnabled(true);&#10;        }&#10;&#10;        // load image if provided (simple handling: if image string non-empty treat as resource name or URL - here use default)&#10;        if (p.image != null &amp;&amp; !p.image.isEmpty()) {&#10;            // attempt to load drawable by name&#10;            int resId = context.getResources().getIdentifier(p.image, &quot;drawable&quot;, context.getPackageName());&#10;            if (resId != 0) holder.img.setImageResource(resId);&#10;            else holder.img.setImageResource(R.mipmap.ic_launcher);&#10;        } else {&#10;            holder.img.setImageResource(R.mipmap.ic_launcher);&#10;        }&#10;&#10;        // show/hide buttons based on role&#10;        if (&quot;stocker&quot;.equalsIgnoreCase(role)) {&#10;            holder.btnIncrease.setVisibility(View.VISIBLE);&#10;            holder.etStockAmount.setVisibility(View.VISIBLE);&#10;            holder.btnAddCart.setVisibility(View.GONE);&#10;        } else {&#10;            holder.btnIncrease.setVisibility(View.GONE);&#10;            holder.etStockAmount.setVisibility(View.GONE);&#10;            holder.btnAddCart.setVisibility(View.VISIBLE);&#10;        }&#10;&#10;        holder.btnIncrease.setOnClickListener(v -&gt; {&#10;            String amountStr = holder.etStockAmount.getText().toString();&#10;            int amount = 1; // ค่าเริ่มต้น&#10;            if (!TextUtils.isEmpty(amountStr)) {&#10;                try {&#10;                    amount = Integer.parseInt(amountStr);&#10;                } catch (NumberFormatException e) {&#10;                    Toast.makeText(context, &quot;กรุณาใส่จำนวนที่ถูกต้อง&quot;, Toast.LENGTH_SHORT).show();&#10;                    return;&#10;                }&#10;            }&#10;            if (amount &lt;= 0) {&#10;                Toast.makeText(context, &quot;กรุณาใส่จำนวนมากกว่า 0&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;            boolean ok = db.increaseStock(p.id, amount);&#10;            if (ok) {&#10;                Toast.makeText(context, &quot;เพิ่มสต็อกเรียบร้อย&quot;, Toast.LENGTH_SHORT).show();&#10;                holder.etStockAmount.setText(&quot;&quot;); // ล้างช่องกรอกหลังจากเพิ่มสำเร็จ&#10;                refresh();&#10;            } else {&#10;                Toast.makeText(context, &quot;ไม่สามารถเพิ่มสต็อก&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        });&#10;&#10;        holder.btnAddCart.setOnClickListener(v -&gt; {&#10;            if (email == null || email.isEmpty()) {&#10;                Toast.makeText(context, &quot;ไม่มีอีเมลผู้ใช้งาน&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;            if (p.qty &lt;= 0) {&#10;                Toast.makeText(context, &quot;สินค้าหมด กรุณารอเติมสต็อก&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;            boolean ok = db.addToCart(email, p.id, 1);&#10;            if (ok) {&#10;                refresh();&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return filteredProducts.size();&#10;    }&#10;&#10;    public void refresh() {&#10;        loadProducts();&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    static class VH extends RecyclerView.ViewHolder {&#10;        TextView tvName, tvQty, tvDesc;&#10;        Button btnAddCart, btnIncrease;&#10;        EditText etStockAmount;&#10;        ImageView img;&#10;&#10;        public VH(@NonNull View itemView) {&#10;            super(itemView);&#10;            tvName = itemView.findViewById(R.id.tvProductName);&#10;            tvDesc = itemView.findViewById(R.id.tvProductDesc);&#10;            tvQty = itemView.findViewById(R.id.tvProductQty);&#10;            btnAddCart = itemView.findViewById(R.id.btnAddCart);&#10;            btnIncrease = itemView.findViewById(R.id.btnIncreaseStock);&#10;            etStockAmount = itemView.findViewById(R.id.etStockAmount);&#10;            img = itemView.findViewById(R.id.imgProduct);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.ezshop;&#10;&#10;import android.content.Context;&#10;import android.database.Cursor;&#10;import android.text.TextUtils;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;import com.example.ezshop.R; // ensure resources are resolved&#10;&#10;public class ProductAdapter extends RecyclerView.Adapter&lt;ProductAdapter.VH&gt; {&#10;    private Context context;&#10;    private List&lt;Product&gt; products = new ArrayList&lt;&gt;();&#10;    private List&lt;Product&gt; filteredProducts = new ArrayList&lt;&gt;(); // สำหรับเก็บรายการที่กรองแล้ว&#10;    private DBhelper db;&#10;    private String role;&#10;    private String email; // for cart operations&#10;&#10;    public ProductAdapter(Context context, String role, String email) {&#10;        this.context = context;&#10;        this.db = new DBhelper(context);&#10;        this.role = role == null ? &quot;&quot; : role;&#10;        this.email = email;&#10;        loadProducts();&#10;    }&#10;&#10;    private void loadProducts() {&#10;        products.clear();&#10;        filteredProducts.clear();&#10;        Cursor c = db.getAllProducts();&#10;        if (c != null) {&#10;            while (c.moveToNext()) {&#10;                int id = c.getInt(0);&#10;                String name = c.getString(1);&#10;                int qty = c.getInt(2);&#10;                String desc = c.getString(3);&#10;                String image = c.getString(4);&#10;                Product product = new Product(id, name, qty, desc, image);&#10;                products.add(product);&#10;                filteredProducts.add(product);&#10;            }&#10;            c.close();&#10;        }&#10;    }&#10;&#10;    public void filter(String query) {&#10;        filteredProducts.clear();&#10;        if (query == null || query.isEmpty()) {&#10;            filteredProducts.addAll(products);&#10;        } else {&#10;            String lowerQuery = query.toLowerCase().trim();&#10;            for (Product product : products) {&#10;                // ค้นหาจากรหัส (ID) หรือชื่อสินค้า&#10;                if (String.valueOf(product.id).contains(lowerQuery) ||&#10;                    product.name.toLowerCase().contains(lowerQuery)) {&#10;                    filteredProducts.add(product);&#10;                }&#10;            }&#10;        }&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public VH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View v = LayoutInflater.from(context).inflate(R.layout.item_product, parent, false);&#10;        return new VH(v);&#10;    }&#10;&#10;    // helper to recognize stocker role (accepts English code or Thai display text)&#10;    private boolean isStockerRole(String r) {&#10;        if (r == null) return false;&#10;        String low = r.toLowerCase();&#10;        return low.contains(&quot;stocker&quot;) || low.contains(&quot;เติม&quot;);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull VH holder, int position) {&#10;        Product p = filteredProducts.get(position);&#10;        holder.tvName.setText(p.name);&#10;        holder.tvDesc.setText(p.description == null ? &quot;&quot; : p.description);&#10;&#10;        if (p.qty &lt;= 0) {&#10;            holder.tvQty.setText(&quot;รอเติมสต็อก&quot;);&#10;            holder.tvQty.setTextColor(holder.itemView.getContext().getResources().getColor(android.R.color.holo_red_dark));&#10;            holder.btnAddCart.setEnabled(false);&#10;        } else {&#10;            holder.tvQty.setText(&quot;จำนวน: &quot; + p.qty);&#10;            holder.tvQty.setTextColor(holder.itemView.getContext().getResources().getColor(android.R.color.black));&#10;            holder.btnAddCart.setEnabled(true);&#10;        }&#10;&#10;        // load image if provided&#10;        if (p.image != null &amp;&amp; !p.image.isEmpty()) {&#10;            int resId = context.getResources().getIdentifier(p.image, &quot;drawable&quot;, context.getPackageName());&#10;            if (resId != 0) holder.img.setImageResource(resId);&#10;            else holder.img.setImageResource(R.mipmap.ic_launcher);&#10;        } else {&#10;            holder.img.setImageResource(R.mipmap.ic_launcher);&#10;        }&#10;&#10;        // show/hide buttons based on role&#10;        if (isStockerRole(role)) {&#10;            holder.btnIncrease.setVisibility(View.VISIBLE);&#10;            holder.etStockAmount.setVisibility(View.VISIBLE);&#10;            holder.btnAddCart.setVisibility(View.GONE);&#10;        } else {&#10;            holder.btnIncrease.setVisibility(View.GONE);&#10;            holder.etStockAmount.setVisibility(View.GONE);&#10;            holder.btnAddCart.setVisibility(View.VISIBLE);&#10;        }&#10;&#10;        holder.btnIncrease.setOnClickListener(v -&gt; {&#10;            String amountStr = holder.etStockAmount.getText().toString();&#10;            int amount = 1; // ค่าเริ่มต้น&#10;            if (!TextUtils.isEmpty(amountStr)) {&#10;                try {&#10;                    amount = Integer.parseInt(amountStr);&#10;                } catch (NumberFormatException e) {&#10;                    Toast.makeText(context, &quot;กรุณาใส่จำนวนที่ถูกต้อง&quot;, Toast.LENGTH_SHORT).show();&#10;                    return;&#10;                }&#10;            }&#10;            if (amount &lt;= 0) {&#10;                Toast.makeText(context, &quot;กรุณาใส่จำนวนมากกว่า 0&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;            boolean ok = db.increaseStock(p.id, amount);&#10;            if (ok) {&#10;                Toast.makeText(context, &quot;เพิ่มสต็อกเรียบร้อย&quot;, Toast.LENGTH_SHORT).show();&#10;                holder.etStockAmount.setText(&quot;&quot;); // ล้างช่องกรอกหลังจากเพิ่มสำเร็จ&#10;                refresh();&#10;            } else {&#10;                Toast.makeText(context, &quot;ไม่สามารถเพิ่มสต็อก&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        });&#10;&#10;        holder.btnAddCart.setOnClickListener(v -&gt; {&#10;            if (email == null || email.isEmpty()) {&#10;                Toast.makeText(context, &quot;ไม่มีอีเมลผู้ใช้งาน&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;            if (p.qty &lt;= 0) {&#10;                Toast.makeText(context, &quot;สินค้าหมด กรุณารอเติมสต็อก&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;            boolean ok = db.addToCart(email, p.id, 1);&#10;            if (ok) {&#10;                refresh();&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return filteredProducts.size();&#10;    }&#10;&#10;    public void refresh() {&#10;        loadProducts();&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    static class VH extends RecyclerView.ViewHolder {&#10;        TextView tvName, tvQty, tvDesc;&#10;        Button btnAddCart, btnIncrease;&#10;        EditText etStockAmount;&#10;        ImageView img;&#10;&#10;        public VH(@NonNull View itemView) {&#10;            super(itemView);&#10;            tvName = itemView.findViewById(R.id.tvProductName);&#10;            tvDesc = itemView.findViewById(R.id.tvProductDesc);&#10;            tvQty = itemView.findViewById(R.id.tvProductQty);&#10;            btnAddCart = itemView.findViewById(R.id.btnAddCart);&#10;            btnIncrease = itemView.findViewById(R.id.btnIncreaseStock);&#10;            etStockAmount = itemView.findViewById(R.id.etStockAmount);&#10;            img = itemView.findViewById(R.id.imgProduct);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>